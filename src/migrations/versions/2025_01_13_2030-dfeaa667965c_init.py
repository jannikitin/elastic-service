"""init

Revision ID: dfeaa667965c
Revises:
Create Date: 2025-01-13 20:30:40.698594

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "dfeaa667965c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("login", sa.String(length=32), nullable=False),
        sa.Column("email", sa.String(length=256), nullable=False),
        sa.Column("hpass", sa.String(length=60), nullable=False),
        sa.Column(
            "registration_data",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "access_level",
            sa.Enum("USER", "ADMIN", "SERVICE", name="portalaccess"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email", name="users_email_UK"),
        sa.UniqueConstraint("login", name="users_login_UK"),
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="companies_name_UK"),
    )
    op.create_table(
        "employees",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("company_id", sa.UUID(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("OWNER", "HR", "MASTER_MENTOR", "MENTOR", name="companyrole"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="employee_user_id_FK", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )

    sa.ForeignKeyConstraint(
        ["owner_id"], ["employees.user_id"], name="company_employee_owner_user_id_FK"
    ),

    op.create_foreign_key(
        "employee_company_id_FK", "employees", "companies", ["company_id"], ["id"]
    )
    op.create_foreign_key(
        "company_employee_owner_user_id_FK",
        "companies",
        "employees",
        ["owner_id"],
        ["user_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("employees")
    op.drop_table("companies")
    # ### end Alembic commands ###
