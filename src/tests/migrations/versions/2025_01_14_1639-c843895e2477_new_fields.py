"""new_fields

Revision ID: c843895e2477
Revises: dfeaa667965c
Create Date: 2025-01-14 16:39:09.958823

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c843895e2477"
down_revision: Union[str, None] = "dfeaa667965c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "companies",
        sa.Column(
            "registration_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "employees",
        sa.Column(
            "took_office_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.drop_constraint("employee_company_id_FK", "employees", type_="foreignkey")
    op.create_foreign_key(
        "employee_company_id_FK",
        "employees",
        "companies",
        ["company_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.add_column(
        "users",
        sa.Column(
            "registration_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column("users", sa.Column("name", sa.String(length=256), nullable=True))
    op.add_column("users", sa.Column("lastname", sa.String(length=256), nullable=True))
    op.drop_column("users", "registration_data")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "registration_data",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("users", "lastname")
    op.drop_column("users", "name")
    op.drop_column("users", "registration_date")
    op.drop_constraint("employee_company_id_FK", "employees", type_="foreignkey")
    op.create_foreign_key(
        "employee_company_id_FK", "employees", "companies", ["company_id"], ["id"]
    )
    op.drop_column("employees", "took_office_date")
    op.drop_column("companies", "registration_date")
    # ### end Alembic commands ###
